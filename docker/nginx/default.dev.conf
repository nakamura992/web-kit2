server {
    listen 80;
    server_name localhost;
    root /var/www/html/public;
    index index.php index.html inde.htm;

    # $maintenance 「0 => 通常, 1 => メンテナンスモード」
    # $maintenanceの値を変更するにはmake maintenance-on, make maintenance-offを実行する
    set $maintenance 0;
    if (-f /usr/share/nginx/html/maintenance/maintenance_mode) {
        set $maintenance 1;
    }

    # 特定のIPアドレスはメンテナンスモードから除外する
    if ($remote_addr = "") {
        set $maintenance 0;
    }

    # API（Laravel）用の設定
    location /api {
        try_files $uri $uri/ /index.php?$query_string;
        proxy_pass http://laravel:9000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_pass_request_headers on;
        proxy_pass_header X-Clockwork-Id;
        proxy_pass_header X-Clockwork-Version;
    }

    # Clockworkデバッグツール用
    location /__clockwork {
        try_files $uri $uri/ /index.php?$query_string;
        proxy_pass http://laravel:9000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_pass_request_headers on;
        proxy_pass_header X-Clockwork-Id;
        proxy_pass_header X-Clockwork-Version;
    }

    location /maintenance/ {
        root /usr/share/nginx/html;
        try_files $uri /maintenance/index.html?original_request=$original_request;
    }

    location ~ \.php$ {
        fastcgi_pass laravel:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # Next.js用の設定（デフォルトルート）
    location / {
        if ($maintenance) {
            set $original_request $request_uri;
            return 302 /maintenance/?original_request=$original_request;
        }
        proxy_pass http://next:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location ^~ /phpmyadmin/ {
        proxy_pass http://pma/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # セキュリティヘッダーの追加
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    client_max_body_size 100M;

    location ~ /\.(?!well-known).* {
        deny all;
    }
}
